buildscript {
	ext {
		springBootVersion = '1.3.3.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://maven.eveoh.nl/content/repositories/releases" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
		classpath("nl.eveoh:gradle-aspectj:1.6")
	}
}

ext
{
neo4jVersion = "2.3.1"
springVersion = "4.2.4.RELEASE"
springBootVersion = "1.3.1.RELEASE"
springDataGraphVersion = "3.4.2.RELEASE"
aspectjVersion = "1.8.7"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 
apply plugin: 'aspectj'

jar {
	baseName = 'chronicle'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "http://m2.neo4j.org/content/repositories/releases" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	testCompile('org.springframework.boot:spring-boot-starter-test') 
	
	compile "org.neo4j:neo4j:${neo4jVersion}"
	compile "org.neo4j:neo4j-cypher-dsl:2.1.4"
    testCompile "org.neo4j:neo4j-kernel:${neo4jVersion}:tests@jar"
    testCompile "org.neo4j:neo4j-io:${neo4jVersion}:tests@jar"
	compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    aspectpath("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-context:${springVersion}")
    aspectpath("org.springframework:spring-context-support:${springVersion}")
    compile("org.springframework:spring-context-support:${springVersion}")
    compile 'com.vaadin:vaadin-spring-boot-starter:1.0.0'
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	compile "org.springframework.data:spring-data-neo4j:${springDataGraphVersion}"
	
	aspectpath "org.aspectj:aspectjtools:${aspectjVersion}"
	compile "org.aspectj:aspectjrt:${aspectjVersion}"
	testCompile "org.aspectj:aspectjrt:${aspectjVersion}"
	testAspectpath "org.aspectj:aspectjrt:${aspectjVersion}"
	compile "org.springframework:spring-aspects:${springVersion}"
	aspectpath "org.springframework:spring-aspects:${springVersion}"
	compile "org.springframework:spring-instrument:3.2.1.RELEASE"
	aspectpath "org.springframework:spring-instrument:3.2.1.RELEASE"
	compile "org.springframework.data:spring-data-neo4j-aspects:${springDataGraphVersion}"
	aspectpath "org.springframework.data:spring-data-neo4j-aspects:${springDataGraphVersion}"
	// Required by spring aspects
	compile "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final"
	aspectpath "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final"
	compile "javax.persistence:persistence-api:1.0"
	aspectpath "javax.persistence:persistence-api:1.0"
	testAspectpath sourceSets.main.output
	
	compile files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
	compile "net.openhft:chronicle-map:3.6.0-rc"
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

configurations {
runtime
testCompile {
	extendsFrom testAspectpath
	extendsFrom aspectpath
}
aspectpath
testAspectpath
ajInpath
compile {
	extendsFrom aspectpath
}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}
